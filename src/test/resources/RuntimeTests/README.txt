The running time of the algorithm that we developed to compute the cardinality of an intensional set is independent of the domain sizes. This can be proven analytically. But in order to show that it is the case, we decided to run two different tests to demonstrate this fact.

The first test is designed for formulas with no free variables. In order to set up a comparable test, we chose 80 randomly generated formulas: 40 CNF and 40 DNF. The construction of these formulas was done as follows:
We started by initiating V to be a set of 20 variable symbols, and C to be a set of 5 constant symbols. For any integer M between 2 and 5, and N between 1 and 5 inclusive; we constructed 2 CNF formulas with M clauses, each of which with N literals. Each literal was constructed by choosing a random variable v from V, a random term t from V+C-{v}, and randomly returning one of "v=t" or "v!=t". We also constructed 2 DNF formulas in the same way. All of the variables in a randomly generated formula were taken to be as index variables (hence, no free variables).

We ran both algorithms (sharpSAT and ours) under a 64-bit Linux running by VMWare on a Mac computer. We measured the total time it took our algorithm to solve all 80 cases. We also measured the time it took to convert the expression into a propositional form for sharpSAT, and the time it took sharpSAT to solve all 80 formulas. We repeated this test for domain sizes varying from 5 to 10 inclusive. The data gathered by doing all these tests are gathered under "sharpSAT" directory. The files under this directory are the followings:
1) sharpSAT-running-data.csv: containing the data from running all 480 tests (80 formulas and 6 domain sizes) using sharpSAT.
2) our-algorithm-running-data.csv: containing the data from running all 480 tests using our algorithm.
3) formulas-without-free-variables.txt: A list of all 80 randomly generated formulas.
4) generated-inputs-for-sharpSAT.zip: containing the input files generated by the python script for sharpSAT.
5) comparison-and-chart.xlsx: comparison table and the chart.
6) README-using-sharpSAT.txt: describing how the input files for sharpSAT were generated and how a cardinality problem was converted into a propositional CNF form.
7) src/*: the python script that converts an intensional set to the propositional form.

Since our algorithm is capable of handling formulas with free variables (sharpSAT is not capable of handling such formulas), we set up a second test to demonstrate that increasing the domain size will not impact the running time even for formulas with free variables.
First, we generated 80 new random formulas as described above. However, we chose the set of index variables differently. We created a subset I of V to be the set of indices: each v in V was given 2/3 chance to be places in I, and a 1/3 to be excluded from I.
We ran our algorithm to solve these randomly generated expressions for domain sizes between 5 and 15 inclusive. The data gathered from this test is under "FormulasWithFreeVariables" directory. The files are the followings:
1) our-algorithm-running-data-formulas-with-free-variables.csv: containing the data form running all 880 tests (80 formulas and 11 domain sizes) using our algorithm.
2) formulas-with-free-variables.txt: A list of all 80 randomly generated formulas.
3) result-and-chart.xlsx: result table and the chart.

Note: The unit of time throughout all these tests is milliseconds.





